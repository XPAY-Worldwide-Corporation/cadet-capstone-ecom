// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  image Json
  address String
  role_name  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  merchant Merchant []
  customer Customer []
}

model Merchant {
  id Int @id @default (autoincrement())
  userId Int @unique
  User User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Customer {
  id Int @id @default (autoincrement())
  userId Int @unique
  User User @relation(fields: [userId], references: [id], onDelete: Cascade)
  transaction Transaction[]
  review Review[]
}

model Category {
  id Int @id @default(autoincrement())
  name String
  product Product[]
}

model Product {
  id Int @id @default(autoincrement())
  image Json @default("[]")
  name String
  description String
  price Int
  quantity Int
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  transaction TransactionLine[]
  review Review[]
}

model TransactionLine {
  id          Int       @id @default(autoincrement())
  productId   Int
  quantity    Int
  transactionId Int
  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Transaction {
  id          Int       @id @default(autoincrement())
  date        DateTime  @default(now())
  paymentMethod String
  status      String    @default("Pending")
  productTotal Int
  customerId  Int
  customer    Customer  @relation(fields: [customerId], references: [id], onDelete: Cascade)
  discountId  Int?
  discount    Discount? @relation(fields: [discountId], references: [id], onDelete: Cascade)
  review      Review[]
  transactionLines TransactionLine[]
}

model Discount{
  id Int @id @default(autoincrement())
  name String
  value Int
  start_date DateTime
  end_date DateTime
  transaction Transaction []
}

model Review{
  id             Int       @id @default(autoincrement())
  rating         Int
  description    String
  image          Json     @default("[]")
  productId      Int
  product        Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  transactionId  Int
  transaction    Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  customerId     Int
  customer       Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)

}